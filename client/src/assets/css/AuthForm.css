/* client/src/assets/css/AuthForm.css */
.auth-page-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: calc(100vh - 75px - var(--spacing-xxl) * 2); /* Navbar height + top/bottom padding */
  padding: var(--spacing-xl) var(--spacing-md);
  animation: authPageFadeInUp 0.5s var(--transition-timing-function) forwards;
}

@keyframes authPageFadeInUp {
  from { opacity: 0; transform: translateY(20px) scale(0.98); }
  to { opacity: 1; transform: translateY(0) scale(1); }
}

.auth-form-card {
  background-color: var(--color-background-medium);
  padding: var(--spacing-xl) var(--spacing-lg);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-xl); /* More pronounced shadow */
  width: 100%;
  max-width: 450px; /* Slightly wider for better spacing */
  text-align: center;
  border-top: 5px solid var(--color-primary); /* Thicker accent border */
  position: relative; /* For potential decorative elements */
  overflow: hidden; /* If using pseudo-elements for background patterns */
}
/* Optional: Subtle background pattern
.auth-form-card::before {
  content: '';
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  background-image: url('data:image/svg+xml,...'); // Your subtle SVG pattern
  opacity: 0.03;
  pointer-events: none;
}
*/


.auth-form-header {
  margin-bottom: var(--spacing-xl);
}

.auth-form-icon {
  font-size: 3.5rem; /* Larger icon */
  color: var(--color-primary);
  margin-bottom: var(--spacing-md);
  display: inline-block; /* To apply margin */
  filter: drop-shadow(0 2px 3px rgba(16, 185, 129, 0.3));
}

.auth-form-header h2 {
  font-family: var(--font-display);
  font-size: 2rem; /* Larger heading */
  color: var(--color-text-light);
  margin-bottom: var(--spacing-sm);
  font-weight: 700;
}

.auth-form-header p {
  font-size: 1rem;
  color: var(--color-text-dark);
}

.auth-form {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg); /* Increased gap */
}

.form-group-auth {
  position: relative;
}

.form-group-auth .input-icon {
  position: absolute;
  left: var(--spacing-md);
  top: 50%;
  transform: translateY(-50%);
  color: var(--color-text-dark);
  font-size: 1.125rem; /* Slightly larger input icon */
  pointer-events: none; /* Allow click through to input */
  transition: color var(--transition-default);
}
.form-group-auth input:focus ~ .input-icon {
    color: var(--color-primary);
}


.form-group-auth input[type="text"],
.form-group-auth input[type="password"],
.form-group-auth input[type="email"] {
  width: 100%;
  padding: var(--spacing-md) var(--spacing-md) var(--spacing-md) calc(var(--spacing-md) * 2 + 1.125rem + var(--spacing-xs)); /* Adjusted padding for icon: left_padding + icon_size + icon_margin_right */
  border: 1.5px solid var(--color-border);
  background-color: var(--color-background-input);
  color: var(--color-text-light);
  border-radius: var(--border-radius-md); /* Consistent radius */
  font-size: 1rem;
  font-weight: 500; /* Slightly bolder input text */
  transition: border-color var(--transition-default), box-shadow var(--transition-default);
}
.form-group-auth input::placeholder {
  color: var(--color-text-dark);
  font-weight: 400;
}
.form-group-auth input:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px var(--color-primary-light);
}


.btn-auth.btn-submit-auth { /* Specific submit button */
  padding: var(--spacing-md) var(--spacing-lg);
  font-size: 1.05rem; /* Slightly larger button text */
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.8px;
  border-radius: var(--border-radius-md);
  background: linear-gradient(45deg, var(--color-primary), var(--color-primary-hover));
  color: var(--color-background-dark); /* Dark text on light primary gradient */
  margin-top: var(--spacing-sm);
  box-shadow: var(--shadow-sm);
  transition: background-position var(--transition-medium) ease, transform var(--transition-fast) ease, box-shadow var(--transition-medium) ease;
  background-size: 200% auto; /* For gradient animation */
}
.btn-auth.btn-submit-auth:hover:not(:disabled) {
  background-position: right center; /* Change gradient direction on hover */
  transform: translateY(-2px) scale(1.01);
  box-shadow: var(--shadow-md);
}
.btn-auth.btn-submit-auth:active:not(:disabled) {
    transform: translateY(0px) scale(1);
}

.btn-auth.btn-submit-auth:disabled {
  background: var(--color-text-disabled); /* Different disabled background */
  cursor: not-allowed;
  transform: translateY(0);
  box-shadow: none;
}
.btn-auth.btn-submit-auth:disabled .spinner-btn { /* Spinner color for disabled state */
    border-top-color: var(--color-background-input);
    border-left-color: var(--color-background-input); /* Match border color */
    border-right-color: var(--color-background-input);
    border-bottom-color: var(--color-text-light); /* Light spinner part */
}


.spinner-btn { /* Spinner for button (already in App.css, ensure consistency) */
  width: 20px;
  height: 20px;
  border-width: 3px;
  border-color: rgba(255, 255, 255, 0.3);
  border-top-color: #fff; /* For primary button */
}


.error-message-form { /* Use global alert style from App.css if defined and suitable */
  /* Or keep specific if needed */
  background-color: var(--color-error-bg);
  color: var(--color-error);
  border: 1px solid var(--color-error);
  padding: var(--spacing-sm) var(--spacing-md);
  margin-bottom: var(--spacing-lg);
  border-radius: var(--border-radius-md);
  font-size: 0.9375rem;
  text-align: left; /* Better for detailed error messages */
  display: flex;
  align-items: flex-start; /* Align icon to top */
  gap: var(--spacing-sm);
}
.error-message-form::before { /* Optional: Error icon */
  content: "!"; /* Or use a react-icon */
  font-weight: bold;
  font-size: 1.2rem;
  line-height: 1.2;
  margin-right: var(--spacing-xs);
}


.auth-switch-prompt {
  margin-top: var(--spacing-xl);
  font-size: 0.9375rem;
  color: var(--color-text-dark);
}
.auth-switch-prompt .auth-link {
  color: var(--color-primary);
  font-weight: 600; /* Bolder link */
  text-decoration: none;
  position: relative; /* For underline animation */
}
.auth-switch-prompt .auth-link::after {
  content: '';
  position: absolute;
  width: 0;
  height: 1.5px;
  display: block;
  margin-top: 2px;
  right: 0;
  background: var(--color-primary);
  transition: width .2s ease;
  -webkit-transition: width .2s ease;
}
.auth-switch-prompt .auth-link:hover::after {
  width: 100%;
  left: 0;
  background-color: var(--color-primary-hover);
}
.auth-switch-prompt .auth-link:hover {
  color: var(--color-primary-hover);
  text-decoration: none; /* Remove default underline if using custom */
}


/* Add some subtle floating animation to the card if desired */
/*
.auth-form-card {
  animation: float 6s ease-in-out infinite;
}
@keyframes float {
	0% { transform: translatey(0px); }
	50% { transform: translatey(-8px); }
	100% { transform: translatey(0px); }
}
*/